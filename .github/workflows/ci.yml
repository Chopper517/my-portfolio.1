name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1. Login to Docker Hub to pull the image
      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_PASS }}

      # 2. Pull the image from Docker Hub
      - name: Pull image from Docker Hub
        run: docker pull ${{ secrets.REGISTRY_USER }}/my-portfolio.1 # Use the correct image name from your Docker Hub repo

      # 3. Run Trivy vulnerability scan
      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.REGISTRY_USER }}/my-portfolio.1'
          format: 'table'
          exit-code: '1' # This will fail the job if vulnerabilities are found
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      # 4. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change to your AWS region

      # 5. Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 6. Retag and Push image to Amazon ECR
      - name: Retag and Push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: portfolio # Your ECR repository name
        run: |
          # Retag the local image with the ECR repository name
          docker tag ${{ secrets.REGISTRY_USER }}/my-portfolio.1 $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.run_number }}
          docker tag ${{ secrets.REGISTRY_USER }}/my-portfolio.1 $ECR_REGISTRY/$ECR_REPOSITORY.1
          
          # Push the tagged images to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.run_number }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY.1
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SSH to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin YOUR_ECR_REGISTRY_URI
            docker rm -f resume || true
            docker run -d --name resume -p 8080:5001 YOUR_ECR_REGISTRY_URI/portfolio:${{ github.run_number }}